package textExcel;

// Update this file with your own code.

public class Spreadsheet implements Grid{

	Cell[][]spreadsheet;
	public Spreadsheet(){
		spreadsheet= new Cell[getRows()][getCols()];
		for(int i = 0; i< spreadsheet.length; i++){
			for(int j = 0; j<spreadsheet[j].length; j++){
				spreadsheet[i][j]= new EmptyCell();
			}
		}
		
		
		
		
	}
	@Override
	public String processCommand(String command)
	{
		
		
		String[] arr= command.split(" ");
		 

		if(arr.length==0){
			return "";
		}
		
		else if(command.equalsIgnoreCase("clear")){ 
			clearSheet();
			return getGridText();
		}
		else if(arr.length==2){
			String loc= arr[1];
			SpreadsheetLocation loc1 = new SpreadsheetLocation(loc);
			spreadsheet[loc1.getRow()][loc1.getCol()]= new EmptyCell();
			return getGridText();
			
		}
		
		else if(command.contains("\"")){
			String[] split = command.split(" = ");
			String loc= split[0];
			String input= split[1];
			SpreadsheetLocation loc1 = new SpreadsheetLocation(loc);
			
			if(split.length >= 3){
				System.out.println(input += " = " + split[2]);
			}
			spreadsheet[loc1.getRow()][loc1.getCol()] = new TextCell(input.substring(1, input.length()-1));
			return getGridText();
			
		}
		else if(arr.length==1){
			SpreadsheetLocation locspect= new SpreadsheetLocation(command);
			return spreadsheet[locspect.getRow()][locspect.getCol()].fullCellText();
			
			
		}
		
		
		else if(command.equalsIgnoreCase("clear ")){
			String loca = arr[1];
			SpreadsheetLocation location= new SpreadsheetLocation(loca);
			spreadsheet[location.getRow()][location.getCol()]=new EmptyCell();
			
			return getGridText();
		}	
		else if(arr.length<=3){
			SpreadsheetLocation loc = new SpreadsheetLocation(command);
			return spreadsheet[loc.getRow()][loc.getCol()].fullCellText();
		}
		return "";
	}
	
	
	
	
	public void setCell(SpreadsheetLocation loc, Cell value) {
		spreadsheet[loc.getRow()][loc.getCol()] = value;
	}
	
	
	
	
	@Override
	public int getRows()
	{
		// TODO Auto-generated method stub
		return 20;
	}

	public void clearSheet(){
		for(int i = 0; i < 20; i++){
			for(int j = 0; j < 12; j++){
				spreadsheet[i][j] = new EmptyCell();
			}
		}
	}
	
	@Override
	public int getCols()
	{
		// TODO Auto-generated method stub
		return 12;
	}

	@Override
	public Cell getCell(Location loc)
	{
		int row = loc.getRow();
		int column = loc.getCol();
		return spreadsheet[row][column];
		
	}

	@Override
	public String getGridText()
	{
		/*
		String header= "   |";
		for(int col=0; col< 11; col++){
			header += (char) (col + 'A') + "         |";
		}
			
		for(int i = 1; i <= getRows(); i++){
			header= header + "\n";
			if(i < 10){
				header= header + i + "  |";
			}else{
				header= header + i + " |";
			}
			for(int j = 0; j < 12; j++){
				header= header + spreadsheet[i-1][j].abbreviatedCellText() + "|";
			}
		}
		header= header + "\n";
		return header;
		*/
		
			String grid = "   |";
			for(int i=0; i < getCols(); i++){
				grid += (char) (i + 'A') + "         |";
			}
			grid += "\n";
		
			for(int i=1; i <= getRows(); i++){
				if(i > 9){
					grid += i + " ";
				}
				if(i < 10){
					grid += i + "  ";
				}
				for(int j=0; j < getCols(); j++){
					grid += "|" + spreadsheet[i-1][j].abbreviatedCellText();
				}
				grid += "|\n";
			}
			return grid;
		}
	
		
		
		
		
	
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
